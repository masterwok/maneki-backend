
-- upsertUserRefreshToken:
-- INSERT INTO refresh_token (user_id, token, expires_on)
-- VALUES (?, ?, ?)
-- ON DUPLICATE KEY UPDATE
--     user_id = VALUES(?),
--     token = VALUES(?),
--     expires_on = VALUES(?);
-- ON DUPLICATE KEY UPDATE token = ?, expires_on = ?;

-- INSERT OR REPLACE INTO refresh_token
-- (
--     user_id,
--     token,
--     expires_on
-- ) VALUES(?, ?, ?);

-- INSERT INTO refresh_token (
--     user_id,
--     token,
--     expires_on
-- )
-- VALUES(
--     :userId,
--     :token,
--     :expiresOn
-- )
-- ON DUPLICATE KEY UPDATE user_id = ?, email = ?, password = ?;

-- ON DUPLICATE KEY UPDATE refresh_token.user_id

-- -- INSERT OR IGNORE INTO refresh_token VALUES (:userId, :token, :expiresOn)
-- UPDATE refresh_token SET token = :token;
-- SELECT * FROM refresh_token;
-- INSERT OR IGNORE INTO refresh_token (
--     user_id,
--     token,
--     expires_on
-- )
-- VALUES(
--     :userId,
--     :token,
--     :expiresOn
-- )
-- UPDATE refresh_token SET user_id = 3;

selectByUserEmail:
SELECT
    refresh_token.*
FROM user
    INNER JOIN refresh_token ON user_id = user.id
WHERE user.email = ?;

